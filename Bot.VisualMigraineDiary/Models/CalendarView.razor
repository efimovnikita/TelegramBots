@using System.Text
<!DOCTYPE html>
<html lang="en" class="@GetSeasonClass()">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@CalendarTable.MonthName calendar</title>
    <link href="https://fonts.googleapis.com/css?family=Roboto+Condensed:400,300,700" rel="stylesheet" type="text/css" />
    <style>
        * {
            margin: 0;
            padding: 0;
        }

        html {
            background: #249991;
        }

        body {
            margin: 5% auto 0;
            width: 280px;
        }

        time {
            color: white;
            text-transform: uppercase;
            font-weight: 300;
            font-size: 38px;
        }
        time em {
            display: block;
            font-weight: 300;
            font-style: normal;
            font-size: 16px;
        }

        header {
            padding: 30px 0;
            background: #4ecdc4;
            text-align: center;
            font-family: "Roboto Condensed", sans-serif;
        }
        header a {
            display: inline-block;
            padding: 5px 20px;
            border-radius: 20px;
            background: #44b3ab;
            color: white;
            text-decoration: none;
            text-transform: uppercase;
            font-weight: 300;
            font-size: 12px;
            transition: all 0.3s ease-in-out;
        }
        header a:hover {
            background: #249991;
            color: #ccc;
        }

        [role="main"] {
            overflow: hidden;
            padding: 15px;
            background: white;
            font-family: "Helvetica", monospace;
        }

        section ul {
            list-style-type: none;
        }
        section li {
            position: relative;
            display: inline-block;
            float: left;
            width: 35px;
            height: 35px;
            text-align: center;
            line-height: 35px;
            zoom: 1;
            *display: inline;
        }

        .l-date--event {
            cursor: pointer;
            transition: background 0.3s ease-in-out;
        }
        .l-date--event:hover {
            background: #efefef;
        }

        .m-bullet--event {
            position: absolute;
            top: 5px;
            right: 5px;
            display: block;
            width: 5px;
            height: 5px;
            border-radius: 50%;
            background: #ff6b6b;
        }

        .m-box--weeks {
            color: #e66b6b;
            text-transform: uppercase;
            font-weight: bold;
            font-size: 10px;
        }

        .m-box--date {
            color: #555;
            font-size: 14px;
        }

        .l-date--passed {
            color: #bababa;
        }

        .eventTip {
            position: absolute;
            width: 150px;
            left: 50%;
            top: -125%;
            margin-left: -75px;
            color: white;
        }
        .eventTip:before {
            content: "▾";
            position: absolute;
            font-size: 25px;
            bottom: -19px;
            left: 46%;
        }

        html.spring .eventTip { background: #7ab892; }
        html.summer .eventTip { background: #45a049; }
        html.autumn .eventTip { background: #bf5f1a; }
        html.winter .eventTip { background: #79bcd6; }

        html.spring .eventTip:before { color: #7ab892; }
        html.summer .eventTip:before { color: #45a049; }
        html.autumn .eventTip:before { color: #bf5f1a; }
        html.winter .eventTip:before { color: #79bcd6; }

        html.spring { background: #88c9a1; }
        html.summer { background: #4CAF50; }
        html.autumn { background: #d2691e; }
        html.winter { background: #87ceeb; }

        html.spring header { background: #7ab892; }
        html.summer header { background: #45a049; }
        html.autumn header { background: #bf5f1a; }
        html.winter header { background: #79bcd6; }
    </style>
</head>
<body>
<header role="banner">
    <time>@CalendarTable.MonthName<em>@CalendarTable.DateTime.Year</em></time>
</header>
<section role="main">
    <ul class="m-box--weeks">
        <li>Sun</li>
        <li>Mon</li>
        <li>Tue</li>
        <li>Wed</li>
        <li>Thu</li>
        <li>Fri</li>
        <li>Sat</li>
    </ul>
    @FormattedWeeks.First()
    @FormattedWeeks[1]
    @FormattedWeeks[2]
    @FormattedWeeks[3]
    @FormattedWeeks.Last()
</section>

<div id="eventBox" style="display: none; margin-top: 10px; padding: 10px; background-color: #f0f0f0; font-family: Helvetica,monospace;"></div>

<script src='https://cdnjs.cloudflare.com/ajax/libs/jquery/2.1.3/jquery.min.js'></script>
<script>
    $('.l-date--event').on('click', function(){
        var EventDescribe = $(this).attr('data-event');
        $('#eventBox').html(EventDescribe).show();
    });

    $('section[role="main"]').on('mouseleave', function(){
        $('#eventBox').hide();
    });
</script>
</body>
</html>

@code {
    [Parameter] public CalendarTable CalendarTable { get; set; }

    private MarkupString[] FormattedWeeks => CalendarTable.Weeks.Select(GetFormattedWeek).ToArray();

    private static MarkupString GetFormattedWeek(Week firstWeek)
    {
        var builder = new StringBuilder();
        builder.AppendLine("<ul class=\"m-box--date\">");
        foreach (var day in firstWeek.Days.Select(pair => pair.Value).ToArray())
        {
            var styleClass = GetStyleForLiElement(day);

            var iElement = "";
            var dataEventAttribute = "";
            if (day!.MigraineEvents.Count != 0)
            {
                iElement = "<i class=\"m-bullet--event\"></i>";
                dataEventAttribute = GetDataEventAttributeWithContent(day);
            }

            var number = $"{day.NumberInMonth}";
            var boldContainer = $"<b><u>{number}</u></b>";
            builder.AppendLine($"<li class=\"{styleClass}\" {dataEventAttribute}>{iElement}{(day.IsToday ? boldContainer : number)}</li>");
        }

        builder.AppendLine("</ul>");

        var formattedWeek = builder.ToString();
        return (MarkupString)formattedWeek;
    }
    
    private static string GetDataEventAttributeWithContent(Day day)
    {
        var builder = new StringBuilder();
        builder.Append("data-event=\"");
        var mEvents = day
            .MigraineEvents
            .Select(migraineEvent => 
            {
                var description = $"{migraineEvent.ScotomaSeverity.GetDescription()}";
                var triggers = migraineEvent.Triggers.Any() ? $" ({string.Join(", ", migraineEvent.Triggers)})" : "";
                var fullText = description + triggers;

                if (fullText.Length > 35)
                {
                    fullText = fullText.Substring(0, 32) + "...";
                }

                return triggers.Any() ? $"{fullText.Substring(0, fullText.IndexOf('('))} <span style='color: grey; font-size: x-small;'>{fullText.Substring(fullText.IndexOf('('))}</span>" : fullText;
            }).ToArray();
        foreach (var mEvent in mEvents)
        {
            builder.Append(mEvent);
            builder.Append("<br>");
        }
        builder.Append('"');
      
        return builder.ToString();
    }

    private static string GetStyleForLiElement(Day? day)
    {
        string style;
      
        if (day!.IsDayWithinCurrentMonth == false)
        {
            style = "l-date--passed";
        }
        else
        {
            style = day.MigraineEvents.Count != 0 ? "l-date--event" : "";
        }

        return style;
    }

    private string GetSeasonClass()
    {
        var seasonClass = "winter";
        var month = CalendarTable.DateTime.Month;
        seasonClass = month switch
        {
            >= 3 and <= 5 => "spring",
            >= 6 and <= 8 => "summer",
            >= 9 and <= 11 => "autumn",
            _ => seasonClass
        };

        return seasonClass;
    }
}